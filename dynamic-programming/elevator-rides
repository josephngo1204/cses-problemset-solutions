#include <iostream>
#include <vector>
 
typedef long long ll; 
 
int main()
{
	ll n{}, x{}; 
	std::cin >> n >> x; 
 
	std::vector<ll> p(n); 
 
	for (ll i{ 0 }; i < n; ++i)
	{
		std::cin >> p[i]; 
	}
 
	std::vector<std::pair<ll, ll>> dp((1 << n), { n + 1, 0 });
 
	dp[0] = { 1, 0 }; 
 
	for (ll mask{ 0 }; mask < (1 << n); ++mask)
	{
		for (ll i{ 0 }; i < n; ++i)
		{
			if ((mask & (1 << i))) 
			{
				continue; 
			}
 
			ll new_mask = mask | (1 << i);
 
			if (dp[mask].second + p[i] <= x)
			{
				dp[new_mask] = std::min(dp[new_mask], { dp[mask].first, dp[mask].second + p[i] }); 
			}
			else
			{
				dp[new_mask] = std::min(dp[new_mask], { dp[mask].first + 1, p[i]});
			}
		}
	}
 
	std::cout << dp[(1 << n) - 1].first; 
 
	return 0; 
}
