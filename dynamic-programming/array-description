#include <iostream>
#include <vector>
 
typedef long long ll;
 
int main()
{
	ll n{}; 
	ll m{};
 
	std::cin >> n >> m;
 
	std::vector<ll> arr(static_cast<std::size_t>(n)); 
 
	for (ll i{ 0 }; i < n; ++i)
	{
		std::cin >> arr[static_cast<std::size_t>(i)];
	}
 
	std::vector<std::vector<ll>> dp(static_cast<std::size_t>(n), std::vector<ll>(static_cast<std::size_t>(m + 1))); 
 
	if (arr[0] == 0)
	{
		for (ll i{ 1 }; i <= m; ++i)
		{
			dp[0][static_cast<std::size_t>(i)] = 1;
		}
	}
 
	else
	{
		dp[0][static_cast<std::size_t>(arr[0])] = 1; 
	}
 
	for (ll i{ 0 }; i < n; ++i)
	{
		if (arr[static_cast<std::size_t>(i)] == 0)
		{
			for (ll j{ 1 }; j <= m; ++j)
			{
				if (i - 1 >= 0)
				{
					dp[static_cast<std::size_t>(i)][static_cast<std::size_t>(j)] += dp[static_cast<std::size_t>(i - 1)][static_cast<std::size_t>(j)];
					dp[static_cast<std::size_t>(i)][static_cast<std::size_t>(j)] %= 1000000007;
				}
 
				if (i - 1 >= 0 && j + 1 <= m)
				{
					dp[static_cast<std::size_t>(i)][static_cast<std::size_t>(j)] += dp[static_cast<std::size_t>(i - 1)][static_cast<std::size_t>(j + 1)];
					dp[static_cast<std::size_t>(i)][static_cast<std::size_t>(j)] %= 1000000007;
				}
 
				if (i - 1 >= 0 && j - 1 >= 0)
				{
					dp[static_cast<std::size_t>(i)][static_cast<std::size_t>(j)] += dp[static_cast<std::size_t>(i - 1)][static_cast<std::size_t>(j - 1)];
					dp[static_cast<std::size_t>(i)][static_cast<std::size_t>(j)] %= 1000000007;
				}
			}
		}
 
		else
		{
			if (i - 1 >= 0)
			{
				dp[static_cast<std::size_t>(i)][static_cast<std::size_t>(arr[static_cast<std::size_t>(i)])] += dp[static_cast<std::size_t>(i - 1)][static_cast<std::size_t>(arr[static_cast<std::size_t>(i)])];
				dp[static_cast<std::size_t>(i)][static_cast<std::size_t>(arr[static_cast<std::size_t>(i)])] %= 1000000007;
			}
 
			if (i - 1 >= 0 && arr[static_cast<std::size_t>(i)] + 1 <= m)
			{
				dp[static_cast<std::size_t>(i)][static_cast<std::size_t>(arr[static_cast<std::size_t>(i)])] += dp[static_cast<std::size_t>(i - 1)][static_cast<std::size_t>(arr[static_cast<std::size_t>(i)] + 1)];
				dp[static_cast<std::size_t>(i)][static_cast<std::size_t>(arr[static_cast<std::size_t>(i)])] %= 1000000007;
			}
 
			if (i - 1 >= 0 && arr[static_cast<std::size_t>(i)] - 1 >= 0)
			{
				dp[static_cast<std::size_t>(i)][static_cast<std::size_t>(arr[static_cast<std::size_t>(i)])] += dp[static_cast<std::size_t>(i - 1)][static_cast<std::size_t>(arr[static_cast<std::size_t>(i)] - 1)];
				dp[static_cast<std::size_t>(i)][static_cast<std::size_t>(arr[static_cast<std::size_t>(i)])] %= 1000000007;
			}
		}
	}
 
	ll ans{};
 
	for (ll i{ 1 }; i <= m; ++i)
	{
		ans += dp[static_cast<std::size_t>(n - 1)][static_cast<std::size_t>(i)]; 
		ans %= 1000000007; 
	}
 
	std::cout << ans; 
 
	return 0;
}
