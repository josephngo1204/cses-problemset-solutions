#include <iostream>
#include <vector>

int n{}, m{}; 

char adj[1001][1001];
bool visited[1001][1001];

typedef long long ll; 

bool isValid(int x, int y)
{
	if (x > m || x < 1 || y > n || y < 1)
		return false;

	if (adj[x][y] == '#' || visited[x][y] == true)
		return false; 

	return true;
}

void dfs(int x, int y)
{
	visited[x][y] = true;

	if (isValid(x - 1, y))
		dfs(x - 1, y);

	if (isValid(x, y - 1))
		dfs(x, y - 1); 

	if (isValid(x + 1, y))
		dfs(x + 1, y);

	if (isValid(x, y + 1))
		dfs(x, y + 1);
}

int main()
{
	std::cin >> m >> n;

	for (int i{ 1 }; i <= m; ++i)
	{
		for (int j{ 1 }; j <= n; ++j)
		{
			std::cin >> adj[i][j]; 
		}
	}

	ll count{};

	for (int i{ 1 }; i <= m; ++i)
	{
		for (int j{ 1 }; j <= n; ++j)
		{
			if (adj[i][j] == '.' && visited[i][j] == false)
			{
				dfs(i, j); 
				++count; 
			}

		}
	}

	std::cout << count; 

	return 0; 
}
