#include <iostream>
#include <algorithm>
#include <ext/pb_ds/assoc_container.hpp>
 
using namespace __gnu_pbds;
 
typedef long long ll;
 
typedef tree<ll, null_type, std::less<ll>, rb_tree_tag, tree_order_statistics_node_update> indexed_set;
 
int main()
{
	ll n{};
	ll k{};
 
	std::cin >> n >> k; 
 
	indexed_set s{}; 
 
	for (ll i{ 0 }; i < n; ++i)
	{
		s.insert(i + 1); 
	}
	
	ll pos{};
 
	while (!s.empty())
	{
		pos = (pos + k) % s.size();
		auto it = s.find_by_order(pos); 
		std::cout << *it << " "; 
		s.erase(it); 
	}
 
	return 0; 
}
